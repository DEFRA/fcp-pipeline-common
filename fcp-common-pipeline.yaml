parameters:
  - name: appFrameworkType
    type: string
    default: nodejs
  - name: Type
    type: string
    default: kubernetes # kubernetes, npm, functions, nuget etc.
  - name: npmLegacyPeerDeps
    type: boolean
    default: false
  - name: dockerFilePath
    type: string
    default: 'Dockerfile'

resources:
  repositories:
    - repository: FcpPipelineCommon
      name: DEFRA/fcp-pipeline-common
      endpoint: DEFRA-ADP
      type: github

variables:
  appName: $[replace(variables['Build.Repository.Name'], 'DEFRA/', '')]
  isPackage: ${{ or(eq(parameters.type, 'npm'), eq(parameters.type, 'nuget')) }}
  isMainBranch: ${{eq(variables['Build.SourceBranch'], 'refs/heads/main')}}

stages:
  - stage: Build
    displayName: 'Build'
    variables:
      - template: variables.yaml

    jobs:
      - job: buildJob
        displayName: 'Build Application'

        steps:
          - checkout: self
          - checkout: FcpPipelineCommon

          - script: |
              echo APP_NAME=$(appName)
              ls -la
              env | grep -i "BUILD_REPOSITORY_NAME"
              echo -e "\033[0;33mBranch: $(Build.SourceBranchName)\033[0m"
              echo ""
              env
            displayName: 'Build and Workspace Info'

          - template: /ado-pipeline/init/app-version.yaml
            parameters:
              appFrameworkType: ${{ parameters.appFrameworkType }}

          - template: /ado-pipeline/build/build-${{ parameters.appFrameworkType }}.yaml
            parameters:
              npmLegacyPeerDeps: ${{ parameters.npmLegacyPeerDeps }}
          - ${{ if ne(variables['isPackage'], true) }}:
              - template: /ado-pipeline/build/docker-build.yaml
                parameters:
                  dockerFilePath: ${{ parameters.dockerFilePath }}

  - stage: Check
    displayName: 'Check'
    dependsOn: Build
    variables:
      - template: variables.yaml
    jobs:
      - job: SnyckScanApplication
        displayName: Snyk Application Scan
        steps:
          - checkout: self
          - checkout: FcpPipelineCommon
          - template: /ado-pipeline/stage/snyk-scan-application.yaml
            parameters:
              appFrameworkType: ${{ parameters.appFrameworkType }}
      - job: SonarCloud
        displayName: SonarCloud Analysis
        steps:
          - checkout: self
          - checkout: FcpPipelineCommon
          - template: /ado-pipeline/stage/sonar-cloud.yaml
            parameters:
              appFrameworkType: ${{ parameters.appFrameworkType }}

  - ${{ if eq(variables['isPackage'], true) }}:
      - stage: PackageDeployment
        condition: succeeded()
        dependsOn:
          - Build
        displayName: Package Deployment
        variables:
          - template: variables.yaml
        jobs:
          - job: Deploy
            displayName: Deploy
            condition: succeeded()
            steps:
              - checkout: self
              - checkout: FcpPipelineCommon
              - template: /ado-pipeline/packageDeploy/deploy-${{ parameters.type }}.yaml
