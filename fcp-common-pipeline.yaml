parameters:
  - name: appFrameworkType
    type: string
    default: nodejs
  - name: type
    type: string
    default: kubernetes # kubernetes, npm, functions, nuget etc.
  - name: npmLegacyPeerDeps
    type: boolean
    default: false
  - name: dockerFilePath
    type: string
    default: "Dockerfile"
  - name: prDeployment
    type: boolean
    default: false
  - name: branchDeployment
    type: boolean
    default: false
  - name: sndDeployment
    type: boolean
    default: true

resources:
  repositories:
    - repository: FcpPipelineCommon
      name: defra/fcp-pipeline-common
      endpoint: DEFRA-ADP
      type: github
      # ref: refs/heads/branch-name

variables:
  - group: fcp-pipeline-common-variables
  - group: fcp-pipeline-common-secrets
  - name: appName
    value: $[replace(variables['Build.Repository.Name'], 'DEFRA/', '')]
  - name: isPackage
    value: ${{ or(eq(parameters.type, 'npm'), eq(parameters.type, 'nuget')) }}
  - name: isMainBranch
    value: ${{ eq(variables['Build.SourceBranch'], 'refs/heads/main') }}
  - name: branchName
    value: $[replace(variables['Build.SourceBranchName'], 'refs/heads/', '')]
  - name: prNumber
    value: $[variables['System.PullRequest.PullRequestNumber']]
  - name: isPr
    value: ${{ eq(variables['Build.Reason'], 'PullRequest') }}

stages:
  - stage: Build
    displayName: "Build"
    jobs:
      - job: InitAndBuild
        displayName: "Build Application"

        steps:
          - checkout: self
          - checkout: FcpPipelineCommon

          - script: |
              echo "##[section]Primary repository: $BUILD_REPOSITORY_NAME"
              echo "##[section]Branch: $(branchName)"
              echo "##[section]Commit message: $BUILD_SOURCEVERSIONMESSAGE"
              echo "##[section]Is Main Branch: $(isMainBranch)"
              echo "##[section]Is Pull Request: $(isPr)"
              echo "##[section]Pull Request Number: $(prNumber)"

            displayName: "Build and Workspace Info"

          - template: /ado-pipeline/build/helpers/app-version.yaml
            parameters:
              appFrameworkType: ${{ parameters.appFrameworkType }}

          - template: /ado-pipeline/build/build-${{ parameters.appFrameworkType }}.yaml
            parameters:
              npmLegacyPeerDeps: ${{ parameters.npmLegacyPeerDeps }}

  - stage: Promote
    displayName: "Promote"
    dependsOn: Build
    variables:
      - template: variables.yaml
    jobs:
      - job: SnykScanApplication
        displayName: Snyk Application Scan
        steps:
          - checkout: self
          - checkout: FcpPipelineCommon
          - template: /ado-pipeline/promote/snyk-scan-application.yaml
            parameters:
              appFrameworkType: ${{ parameters.appFrameworkType }}

      - job: SonarCloud
        displayName: SonarCloud Analysis
        steps:
          - checkout: self
          - checkout: FcpPipelineCommon
          - template: /ado-pipeline/promote/sonar-cloud.yaml
            parameters:
              appFrameworkType: ${{ parameters.appFrameworkType }}

      - job: HelmTemplate
        displayName: "Build Helm Template"
        steps:
          - checkout: self
          - checkout: FcpPipelineCommon
          - template: /ado-pipeline/promote/build-helm.yaml
            parameters:
              subscription: $(sharedSubscription)
              acrName: $(sharedAcr)

      - ${{ if ne(variables['isPackage'], true) }}:
          - job: DockerBuild
            displayName: "Docker Build"
            steps:
              - checkout: self
              - checkout: FcpPipelineCommon
              - template: /ado-pipeline/promote/docker-build.yaml
                parameters:
                  dockerFilePath: ${{ parameters.dockerFilePath }}
                  subscription: $(sharedSubscription)
                  acrName: $(sharedAcr)

  - ${{ if eq(variables['isPackage'], true) }}:
      - stage: PackageDeployment
        dependsOn:
          - Build
        displayName: Package Deployment
        variables:
          - template: variables.yaml

        jobs:
          - job: Deploy
            displayName: Deploy
            steps:
              - checkout: self
              - checkout: FcpPipelineCommon
              - template: /ado-pipeline/packageDeploy/deploy-${{ parameters.type }}.yaml

  - ${{ if eq(variables['isMainBranch'], False) }}:
      - ${{ if or( and(eq(variables['isPr'], True), eq(parameters.prDeployment, True)) , and(ne(variables['isPr'], True), eq(parameters.branchDeployment, True))) }}:
          - stage: BetaDeployment
            variables:
              - template: variables.yaml
              - group: fcp-pipeline-snd2-variables
            pool:
              name: "DEFRA-FFC-SND2-ubuntu2004"
            dependsOn:
              - Build
              - Promote
            displayName: Beta Deployment

            jobs:
              - job: provisioning
                displayName: Provisioning
                steps:
                  - checkout: self
                  - checkout: FcpPipelineCommon
                  - template: /ado-pipeline/provision/resources-provisioning.yaml
                    parameters:
                      subscription: $(subscriptionPreFix)-SND2
                      isTemporary: true

              - deployment: TempDeploy
                variables:
                  - name: identityName
                    value: $[ dependencies.provisioning.outputs['resourceProvisioning.identityName'] ]
                  - name: identityClientId
                    value: $[ dependencies.provisioning.outputs['resourceProvisioning.identityClientId'] ]
                  - name: identityResourceId
                    value: $[ dependencies.provisioning.outputs['resourceProvisioning.identityResourceId'] ]
                displayName: Deploy
                environment: snd2
                dependsOn: provisioning
                workspace:
                  clean: all
                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: self
                        - checkout: FcpPipelineCommon
                        - template: /ado-pipeline/Deploy/deploy.yaml
                          parameters:
                            env: pr
                            subscription: $(subscriptionPreFix)-SND2
                            acr: $(sharedAcr)
                            isTemporary: true

  - ${{ else }}:
      - ${{ if eq(variables['sndDeployment'], true) }}:
          - stage: DeploymentSND
            variables:
              - template: variables.yaml
              - group: fcp-pipeline-snd2-variables
            pool:
              name: "DEFRA-FFC-SND2-ubuntu2004"
            dependsOn:
              - Build
              - Promote
            displayName: SND Deployment

            jobs:
              - job: provisioningSND
                displayName: Provisioning SND
                steps:
                  - checkout: self
                  - checkout: FcpPipelineCommon
                  - template: /ado-pipeline/provision/resources-provisioning.yaml
                    parameters:
                      subscription: $(subscriptionPreFix)-SND2
                      isTemporary: false

              - deployment: DeploySND
                displayName: Deploy SND
                environment: snd2
                dependsOn: provisioning
                workspace:
                  clean: all
                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: self
                        - checkout: FcpPipelineCommon
                        - template: /ado-pipeline/Deploy/deploy.yaml
                          parameters:
                            env: pr
                            subscription: $(subscriptionPreFix)-SND2
                            acr: $(sharedAcr)
                            isTemporary: false
