parameters:
  - name: subscription
    type: string
  - name: acr
    type: string
  - name: env
    type: string   
  - name: isTemporary
    type: boolean
    default: false
steps:
  - task: KubeloginInstaller@0
    condition: succeeded()
    displayName: 'Install kubelogin'
    inputs:
      kubeloginVersion: 'latest'

  - bash: |
      source ./fcp-pipeline-common/common/shared_functions.sh
      namespace=$(get_namespace_name "$(isMainBranch)" "$(appName)" "$(releaseVersion)" "$(altEnvironment)")
      echo the namespace is $namespace
      echo "##vso[task.setvariable variable=namespace]$namespace"
    displayName: 'Extract namespace'

  - bash: |
      source ./fcp-pipeline-common/common/shared_functions.sh
      
      echo executing command: "$(appName)/appconfig/${{ parameters.env }}.yaml" "$(appName)" "$(prOrBranchNo)" "${{ parameters.isTemporary }}"
      configVars=$(convert_config "$(appName)/appconfig/${{ parameters.env }}.yaml" "$(appName)" "$(prOrBranchNo)" "${{ parameters.isTemporary }}")

      echo "configVars: $configVars"
      
      echo "##vso[task.setvariable variable=configVars]$configVars"

    displayName: 'prepare configuration'

  - task: AzureCLI@2
    displayName: 'prepare pipeline configuration'
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |

        identity=$(yq eval '.resources.identity' $(appName)/provision.azure.yaml)
        identityName="$(managedIdentityPrefix)-$identity"

        echo "Identity name is $identityName"
        echo "resource group is $(resourceGroup)"

        IDENTITY_CLIENT_ID=$(az identity show --resource-group $(resourceGroup) --name $identityName --query clientId --output tsv | xargs)
        IDENTITY_RESOURCE_ID=$(az identity show --resource-group $(resourceGroup) --name $identityName --query id --output tsv | xargs)
     
        echo "##vso[task.setvariable variable=identityClientId]$IDENTITY_CLIENT_ID"
        echo "##vso[task.setvariable variable=identityResourceId]$IDENTITY_RESOURCE_ID"
        echo "##vso[task.setvariable variable=identityName]$identityName"

  - task: AzureCLI@2
    displayName: 'Login to acr'
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        ACR_TOKEN=$(az acr login --name ${{ parameters.acr }} --expose-token --output tsv --query accessToken)
        helm registry login "${{ parameters.acr }}.azurecr.io" --username 00000000-0000-0000-0000-000000000000 --password $ACR_TOKEN

  - task: HelmDeploy@1
    displayName: Deploy Helm Chart
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: ${{ parameters.subscription }}
      azureResourceGroup: $(AKSResourceGroup)
      kubernetesCluster: $(AKSClusster)
      namespace: $(namespace)
      command: 'upgrade'
      chartType: 'Name'
      chartName: oci://${{ parameters.acr }}.azurecr.io/helm/$(appName)
      chartVersion: $(releaseVersion)
      releaseName: $(appName)
      arguments: '--create-namespace --timeout 120s' 
      overrideValues: |
        image=${{ parameters.acr }}.azurecr.io/$(appName):$(releaseVersion)
        azureIdentity.clientID=$(identityClientId)
        azureIdentity.resourceID=$(identityResourceId)
        postgresService.postgresUser=$(identityName)
        secretProviderClass.azure.tenantId=$(tenantId)
        $(configVars)
