parameters:
  - name: subscription
    type: string
  - name: isTemporary
    type: boolean
    default: false
  - name: databaseName
    type: string
steps:
  - task: AzureCLI@2
    displayName: Migrating db changes
    condition: succeeded()
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        if [[ "$(hasDatabase)" == "true" ]]; then      
          source ./fcp-pipeline-common/common/database_utils.sh
          source ./fcp-pipeline-common/common/shared_functions.sh

          SCHEMA_NAME=$(get_schema_name "$(appName)" "${{ parameters.isTemporary }}" "$(prOrBranchNo)")
          DATABASE_HOST=$(targetEnvironment)$(sqlflexiServerName).postgres.database.azure.com
          DB_FULL_NAME=${{ parameters.databaseName }}

          echo "##[debug]Migrating the database $DB_FULL_NAME"

          RESULT=$(run_db_migration "$(appName)" "$(sqlpostgresflexiAADGroupName)" "$DATABASE_HOST" "$SCHEMA_NAME" "$DB_FULL_NAME")
          echo "##[debug]$RESULT"
        else
          echo "##[debug]The service doesn't need a database"
        fi
