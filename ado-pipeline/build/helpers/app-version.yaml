parameters:
  - name: appFrameworkType
    type: string

steps:
  - bash: |
      echo "##[debug]Setting app version for framework: ${{ parameters.appFrameworkType }}"

      case "${{ parameters.appFrameworkType }}" in
        nodejs)
          echo "##[debug]Setting version for Node.js..."
          npmVersionString=$(grep version $(appName)/package.json | awk -F \" '{print $4}')
          echo "##vso[task.setvariable variable=appVersion]$npmVersionString"
          ;;
        dotnet)
          echo "##[debug]Setting version for .NET..."
          echo "##vso[task.setvariable variable=appVersion]0.0.0"
          ;;
        java)
          echo "##[debug]Setting version for Java..."
          echo "##vso[task.setvariable variable=appVersion]0.0.0"
          ;;
        *)
          echo "##[debug]Unknown app framework type: ${{ parameters.appFrameworkType }}"
          exit 1
          ;;
      esac
    displayName: Set app version (framework-specific)

  - bash: |
      buildVer=$(echo $(Build.BuildNumber) | cut -d'.' -f2)
      echo "##[debug]buildNumber $(Build.BuildNumber)"
      echo "##[debug]buildVer $buildVer"
      echo "##[debug]appVersion $(appVersion)"

      if [[ "$(isMainBranch)" == "False" ]]; then
        echo "##[debug]The isMainBranch is False so it should be an alpha version"
        prOrBranchNo=""
        if [[ "$(isPr)" == "true" ]]; then
          version="$(appVersion)-beta.$(prNumber)"
          prOrBranchNo=$(prNumber)
          echo "##vso[task.setvariable variable=PrOrBranchNo;isOutput=true]$prOrBranchNo"
        else
          source ./fcp-pipeline-common/common/shared_functions.sh
          branchId=$(readable_hash_id "$(branchName)")
          version="$(appVersion)-alpha.$branchId"
          prOrBranchNo=$branchId
          echo "##vso[task.setvariable variable=PrOrBranchNo;isOutput=true]$prOrBranchNo"
        fi
        echo "##[debug]Pr Or Branch No is $prOrBranchNo"
      else
        echo "##[debug]the isMainBranch is True so it should be a final release version"
        version="$(appVersion)"
      fi

      echo "##vso[task.setvariable variable=ReleaseVersion;isOutput=true]$version"
      echo "##vso[task.setvariable variable=BuildVer;isOutput=true]$buildVer"

      # setting the pipeline name with updating the build number
      
      if [[ "$(isPr)" == "true" ]]; then
        echo "##vso[build.updatebuildnumber]$(System.PullRequest.SourceBranch)  $version"
      else
        if [[ "$(isMainBranch)" == "True" ]]; then
          echo "##vso[build.updatebuildnumber]$version"
        else
          echo "##vso[build.updatebuildnumber]$(Build.SourceBranchName)  $version"
        fi
      fi

      source ./fcp-pipeline-common/common/shared_functions.sh
      PROVISIONING_YAML_FILE="$(appName)/provision.azure.yaml"
      HAS_DATABASE=$(has_database "$PROVISIONING_YAML_FILE")
      echo "##vso[task.setvariable variable=hasDatabase;isOutput=true]$HAS_DATABASE"



    displayName: Set global App Version
    name: AppVersionTask
